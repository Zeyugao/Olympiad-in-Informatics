{简单的思路就是枚举以当前点为图形的第一个点能否放图形，放哪个，然后一步一步的从上往下，从左往右搜索就可以了，但是处理这些图形的所有端点需要一个一个手推赋值，大概50多种情况，300+行把。。。。在考试的5个小时能把这些点写出来不容易啊。。。

最后程序时间复杂度与你手推的点顺序有关，反正我的程序开始1个点没有过，加了一个预处理判断如果出现2个点的孤立块，就直接输出无解了，然后最慢的点0.5s。

时间复杂度：

理论上是O（2^50）......因为每一步都有50种可选图形，但是不可能，因为符合要求的只有10个左右，所以还是很快的啊。。
}


My code
(*
    *Problem:    NOI2005 智慧珠游戏
    *Author :    Chen Yang
    *Time   :    2012.6.3 5:40 pm
    *State  :    solved
    *Memo   :    搜索、预处理
*)
program zhzyx;
var
  i,j:longint;
  map,text:array[0..15,0..15] of char;
  get:array['A'..'Z'] of boolean;
  have:array[0..15,0..15] of boolean;
  F:array['A'..'Z',0..8,0..5,0..2] of longint;
  S,P:array['A'..'Z'] of longint;
//======================
procedure init;
begin
  S['A']:=4; P['A']:=2;
  F['A',1,1,1]:=0; F['A',1,1,2]:=1;
  F['A',1,2,1]:=1; F['A',1,2,2]:=0;

  F['A',2,1,1]:=0; F['A',2,1,2]:=1;
  F['A',2,2,1]:=1; F['A',2,2,2]:=1;

  F['A',3,1,1]:=1; F['A',3,1,2]:=0;
  F['A',3,2,1]:=1; F['A',3,2,2]:=1;

  F['A',4,1,1]:=1; F['A',4,1,2]:=0;
  F['A',4,2,1]:=1; F['A',4,2,2]:=-1;

  S['B']:=2; P['B']:=3;
  F['B',1,1,1]:=0; F['B',1,1,2]:=1;
  F['B',1,2,1]:=0; F['B',1,2,2]:=2;
  F['B',1,3,1]:=0; F['B',1,3,2]:=3;

  F['B',2,1,1]:=1; F['B',2,1,2]:=0;
  F['B',2,2,1]:=2; F['B',2,2,2]:=0;
  F['B',2,3,1]:=3; F['B',2,3,2]:=0;

  S['C']:=8; P['C']:=3;
  F['C',1,1,1]:=1; F['C',1,1,2]:=0;
  F['C',1,2,1]:=2; F['C',1,2,2]:=0;
  F['C',1,3,1]:=2; F['C',1,3,2]:=-1;

  F['C',2,1,1]:=0; F['C',2,1,2]:=1;
  F['C',2,2,1]:=1; F['C',2,2,2]:=1;
  F['C',2,3,1]:=2; F['C',2,3,2]:=1;

  F['C',3,1,1]:=1; F['C',3,1,2]:=0;
  F['C',3,2,1]:=2; F['C',3,2,2]:=0;
  F['C',3,3,1]:=2; F['C',3,3,2]:=1;

  F['C',4,1,1]:=0; F['C',4,1,2]:=1;
  F['C',4,2,1]:=1; F['C',4,2,2]:=0;
  F['C',4,3,1]:=2; F['C',4,3,2]:=0;

  F['C',5,1,1]:=1; F['C',5,1,2]:=0;
  F['C',5,2,1]:=1; F['C',5,2,2]:=-1;
  F['C',5,3,1]:=1; F['C',5,3,2]:=-2;

  F['C',6,1,1]:=1; F['C',6,1,2]:=0;
  F['C',6,2,1]:=1; F['C',6,2,2]:=1;
  F['C',6,3,1]:=1; F['C',6,3,2]:=2;

  F['C',7,1,1]:=0; F['C',7,1,2]:=1;
  F['C',7,2,1]:=0; F['C',7,2,2]:=2;
  F['C',7,3,1]:=1; F['C',7,3,2]:=2;

  F['C',8,1,1]:=1; F['C',8,1,2]:=0;
  F['C',8,2,1]:=0; F['C',8,2,2]:=1;
  F['C',8,3,1]:=0; F['C',8,3,2]:=2;

  S['D']:=1; P['D']:=3;
  F['D',1,1,1]:=1; F['D',1,1,2]:=0;
  F['D',1,2,1]:=0; F['D',1,2,2]:=1;
  F['D',1,3,1]:=1; F['D',1,3,2]:=1;

  S['E']:=4; P['E']:=4;
  F['E',1,1,1]:=1; F['E',1,1,2]:=0;
  F['E',1,2,1]:=2; F['E',1,2,2]:=0;
  F['E',1,3,1]:=2; F['E',1,3,2]:=1;
  F['E',1,4,1]:=2; F['E',1,4,2]:=2;

  F['E',2,1,1]:=1; F['E',2,1,2]:=0;
  F['E',2,2,1]:=2; F['E',2,2,2]:=0;
  F['E',2,3,1]:=2; F['E',2,3,2]:=-1;
  F['E',2,4,1]:=2; F['E',2,4,2]:=-2;

  F['E',3,1,1]:=0; F['E',3,1,2]:=1;
  F['E',3,2,1]:=0; F['E',3,2,2]:=2;
  F['E',3,3,1]:=1; F['E',3,3,2]:=0;
  F['E',3,4,1]:=2; F['E',3,4,2]:=0;

  F['E',4,1,1]:=0; F['E',4,1,2]:=1;
  F['E',4,2,1]:=0; F['E',4,2,2]:=2;
  F['E',4,3,1]:=1; F['E',4,3,2]:=2;
  F['E',4,4,1]:=2; F['E',4,4,2]:=2;

  S['F']:=8; P['F']:=4;
  F['F',1,1,1]:=0; F['F',1,1,2]:=1;
  F['F',1,2,1]:=1; F['F',1,2,2]:=1;
  F['F',1,3,1]:=0; F['F',1,3,2]:=2;
  F['F',1,4,1]:=0; F['F',1,4,2]:=3;

  F['F',2,1,1]:=1; F['F',2,1,2]:=0;
  F['F',2,2,1]:=1; F['F',2,2,2]:=-1;
  F['F',2,3,1]:=1; F['F',2,3,2]:=1;
  F['F',2,4,1]:=1; F['F',2,4,2]:=2;

  F['F',3,1,1]:=1; F['F',3,1,2]:=0;
  F['F',3,2,1]:=2; F['F',3,2,2]:=0;
  F['F',3,3,1]:=1; F['F',3,3,2]:=-1;
  F['F',3,4,1]:=3; F['F',3,4,2]:=0;

  F['F',4,1,1]:=1; F['F',4,1,2]:=0;
  F['F',4,2,1]:=2; F['F',4,2,2]:=0;
  F['F',4,3,1]:=1; F['F',4,3,2]:=1;
  F['F',4,4,1]:=3; F['F',4,4,2]:=0;

  F['F',5,1,1]:=1; F['F',5,1,2]:=0;
  F['F',5,2,1]:=2; F['F',5,2,2]:=0;
  F['F',5,3,1]:=3; F['F',5,3,2]:=0;
  F['F',5,4,1]:=2; F['F',5,4,2]:=1;

  F['F',6,1,1]:=1; F['F',6,1,2]:=0;
  F['F',6,2,1]:=2; F['F',6,2,2]:=0;
  F['F',6,3,1]:=3; F['F',6,3,2]:=0;
  F['F',6,4,1]:=2; F['F',6,4,2]:=-1;

  F['F',7,1,1]:=1; F['F',7,1,2]:=1;
  F['F',7,2,1]:=1; F['F',7,2,2]:=0;
  F['F',7,3,1]:=1; F['F',7,3,2]:=-1;
  F['F',7,4,1]:=1; F['F',7,4,2]:=-2;

  F['F',8,1,1]:=0; F['F',8,1,2]:=1;
  F['F',8,2,1]:=0; F['F',8,2,2]:=2;
  F['F',8,3,1]:=0; F['F',8,3,2]:=3;
  F['F',8,4,1]:=1; F['F',8,4,2]:=2;

  S['G']:=4; P['G']:=4;
  F['G',1,1,1]:=1; F['G',1,1,2]:=0;
  F['G',1,2,1]:=0; F['G',1,2,2]:=1;
  F['G',1,3,1]:=0; F['G',1,3,2]:=2;
  F['G',1,4,1]:=1; F['G',1,4,2]:=2;

  F['G',2,1,1]:=1; F['G',2,1,2]:=0;
  F['G',2,2,1]:=1; F['G',2,2,2]:=1;
  F['G',2,3,1]:=1; F['G',2,3,2]:=2;
  F['G',2,4,1]:=0; F['G',2,4,2]:=2;

  F['G',3,1,1]:=0; F['G',3,1,2]:=1;
  F['G',3,2,1]:=1; F['G',3,2,2]:=1;
  F['G',3,3,1]:=2; F['G',3,3,2]:=1;
  F['G',3,4,1]:=2; F['G',3,4,2]:=0;

  F['G',4,1,1]:=0; F['G',4,1,2]:=1;
  F['G',4,2,1]:=1; F['G',4,2,2]:=0;
  F['G',4,3,1]:=2; F['G',4,3,2]:=0;
  F['G',4,4,1]:=2; F['G',4,4,2]:=1;

  S['H']:=8; P['H']:=4;
  F['H',1,1,1]:=0; F['H',1,1,2]:=1;
  F['H',1,2,1]:=0; F['H',1,2,2]:=2;
  F['H',1,3,1]:=1; F['H',1,3,2]:=0;
  F['H',1,4,1]:=1; F['H',1,4,2]:=1;

  F['H',2,1,1]:=0; F['H',2,1,2]:=1;
  F['H',2,2,1]:=0; F['H',2,2,2]:=2;
  F['H',2,3,1]:=1; F['H',2,3,2]:=1;
  F['H',2,4,1]:=1; F['H',2,4,2]:=2;

  F['H',3,1,1]:=1; F['H',3,1,2]:=0;
  F['H',3,2,1]:=1; F['H',3,2,2]:=-1;
  F['H',3,3,1]:=2; F['H',3,3,2]:=0;
  F['H',3,4,1]:=2; F['H',3,4,2]:=-1;

  F['H',4,1,1]:=1; F['H',4,1,2]:=0;
  F['H',4,2,1]:=1; F['H',4,2,2]:=1;
  F['H',4,3,1]:=2; F['H',4,3,2]:=0;
  F['H',4,4,1]:=2; F['H',4,4,2]:=1;

  F['H',5,1,1]:=0; F['H',5,1,2]:=1;
  F['H',5,2,1]:=1; F['H',5,2,2]:=0;
  F['H',5,3,1]:=1; F['H',5,3,2]:=1;
  F['H',5,4,1]:=1; F['H',5,4,2]:=2;

  F['H',6,1,1]:=0; F['H',6,1,2]:=1;
  F['H',6,2,1]:=1; F['H',6,2,2]:=0;
  F['H',6,3,1]:=1; F['H',6,3,2]:=1;
  F['H',6,4,1]:=2; F['H',6,4,2]:=1;

  F['H',7,1,1]:=0; F['H',7,1,2]:=1;
  F['H',7,2,1]:=1; F['H',7,2,2]:=0;
  F['H',7,3,1]:=1; F['H',7,3,2]:=1;
  F['H',7,4,1]:=1; F['H',7,4,2]:=-1;

  F['H',8,1,1]:=0; F['H',8,1,2]:=1;
  F['H',8,2,1]:=1; F['H',8,2,2]:=0;
  F['H',8,3,1]:=1; F['H',8,3,2]:=1;
  F['H',8,4,1]:=2; F['H',8,4,2]:=0;

  S['I']:=8; P['I']:=4;
  F['I',1,1,1]:=0; F['I',1,1,2]:=1;
  F['I',1,2,1]:=0; F['I',1,2,2]:=2;
  F['I',1,3,1]:=1; F['I',1,3,2]:=2;
  F['I',1,4,1]:=1; F['I',1,4,2]:=3;

  F['I',2,1,1]:=0; F['I',2,1,2]:=1;
  F['I',2,2,1]:=1; F['I',2,2,2]:=0;
  F['I',2,3,1]:=1; F['I',2,3,2]:=-1;
  F['I',2,4,1]:=1; F['I',2,4,2]:=-2;

  F['I',3,1,1]:=0; F['I',3,1,2]:=1;
  F['I',3,2,1]:=0; F['I',3,2,2]:=2;
  F['I',3,3,1]:=1; F['I',3,3,2]:=0;
  F['I',3,4,1]:=1; F['I',3,4,2]:=-1;

  F['I',4,1,1]:=0; F['I',4,1,2]:=1;
  F['I',4,2,1]:=1; F['I',4,2,2]:=1;
  F['I',4,3,1]:=1; F['I',4,3,2]:=2;
  F['I',4,4,1]:=1; F['I',4,4,2]:=3;

  F['I',5,1,1]:=1; F['I',5,1,2]:=0;
  F['I',5,2,1]:=1; F['I',5,2,2]:=1;
  F['I',5,3,1]:=2; F['I',5,3,2]:=1;
  F['I',5,4,1]:=3; F['I',5,4,2]:=1;

  F['I',6,1,1]:=1; F['I',6,1,2]:=0;
  F['I',6,2,1]:=1; F['I',6,2,2]:=-1;
  F['I',6,3,1]:=2; F['I',6,3,2]:=-1;
  F['I',6,4,1]:=3; F['I',6,4,2]:=-1;

  F['I',7,1,1]:=1; F['I',7,1,2]:=0;
  F['I',7,2,1]:=2; F['I',7,2,2]:=0;
  F['I',7,3,1]:=2; F['I',7,3,2]:=1;
  F['I',7,4,1]:=3; F['I',7,4,2]:=1;

  F['I',8,1,1]:=1; F['I',8,1,2]:=0;
  F['I',8,2,1]:=2; F['I',8,2,2]:=0;
  F['I',8,3,1]:=2; F['I',8,3,2]:=-1;
  F['I',8,4,1]:=3; F['I',8,4,2]:=-1;

  S['J']:=1; P['J']:=4;
  F['J',1,1,1]:=1; F['J',1,1,2]:=0;
  F['J',1,2,1]:=1; F['J',1,2,2]:=1;
  F['J',1,3,1]:=2; F['J',1,3,2]:=0;
  F['J',1,4,1]:=1; F['J',1,4,2]:=-1;

  S['K']:=4; P['K']:=4;
  F['K',1,1,1]:=1; F['K',1,1,2]:=0;
  F['K',1,2,1]:=1; F['K',1,2,2]:=1;
  F['K',1,3,1]:=2; F['K',1,3,2]:=1;
  F['K',1,4,1]:=2; F['K',1,4,2]:=2;

  F['K',2,1,1]:=1; F['K',2,1,2]:=0;
  F['K',2,2,1]:=1; F['K',2,2,2]:=-1;
  F['K',2,3,1]:=2; F['K',2,3,2]:=-1;
  F['K',2,4,1]:=2; F['K',2,4,2]:=-2;

  F['K',3,1,1]:=0; F['K',3,1,2]:=1;
  F['K',3,2,1]:=1; F['K',3,2,2]:=1;
  F['K',3,3,1]:=1; F['K',3,3,2]:=2;
  F['K',3,4,1]:=2; F['K',3,4,2]:=2;

  F['K',4,1,1]:=0; F['K',4,1,2]:=1;
  F['K',4,2,1]:=1; F['K',4,2,2]:=0;
  F['K',4,3,1]:=1; F['K',4,3,2]:=-1;
  F['K',4,4,1]:=2; F['K',4,4,2]:=-1;

  S['L']:=8; P['L']:=4;
  F['L',1,1,1]:=0; F['L',1,1,2]:=1;
  F['L',1,2,1]:=0; F['L',1,2,2]:=2;
  F['L',1,3,1]:=0; F['L',1,3,2]:=3;
  F['L',1,4,1]:=1; F['L',1,4,2]:=0;

  F['L',2,1,1]:=1; F['L',2,1,2]:=0;
  F['L',2,2,1]:=1; F['L',2,2,2]:=1;
  F['L',2,3,1]:=1; F['L',2,3,2]:=2;
  F['L',2,4,1]:=1; F['L',2,4,2]:=3;

  F['L',3,1,1]:=0; F['L',3,1,2]:=1;
  F['L',3,2,1]:=0; F['L',3,2,2]:=2;
  F['L',3,3,1]:=0; F['L',3,3,2]:=3;
  F['L',3,4,1]:=1; F['L',3,4,2]:=3;

  F['L',4,1,1]:=1; F['L',4,1,2]:=0;
  F['L',4,2,1]:=1; F['L',4,2,2]:=-1;
  F['L',4,3,1]:=1; F['L',4,3,2]:=-2;
  F['L',4,4,1]:=1; F['L',4,4,2]:=-3;

  F['L',5,1,1]:=1; F['L',5,1,2]:=0;
  F['L',5,2,1]:=2; F['L',5,2,2]:=0;
  F['L',5,3,1]:=3; F['L',5,3,2]:=0;
  F['L',5,4,1]:=3; F['L',5,4,2]:=1;

  F['L',6,1,1]:=0; F['L',6,1,2]:=1;
  F['L',6,2,1]:=1; F['L',6,2,2]:=0;
  F['L',6,3,1]:=2; F['L',6,3,2]:=0;
  F['L',6,4,1]:=3; F['L',6,4,2]:=0;

  F['L',7,1,1]:=1; F['L',7,1,2]:=0;
  F['L',7,2,1]:=2; F['L',7,2,2]:=0;
  F['L',7,3,1]:=3; F['L',7,3,2]:=0;
  F['L',7,4,1]:=3; F['L',7,4,2]:=-1;

  F['L',8,1,1]:=0; F['L',8,1,2]:=1;
  F['L',8,2,1]:=1; F['L',8,2,2]:=1;
  F['L',8,3,1]:=2; F['L',8,3,2]:=1;
  F['L',8,4,1]:=3; F['L',8,4,2]:=1;
end;
//======================
procedure print;
var
  i,j:longint;
begin
  for i:=1 to 10 do
  begin
    for j:=1 to i do write(map[i,j]);
    writeln;
  end;
end;
//======================
function check(x,y,k:longint; fp:char):boolean;
var
  i,fx,fy:longint;
begin
  for i:=1 to p[fp] do
  begin
    fx:=x+f[fp,k,i,1]; fy:=y+f[fp,k,i,2];
    if (fx<1)or(fx>10)or(fy<1)or(fy>fx)or(map[fx,fy]<>'.') then exit(false);
  end;
  exit(true);
end;
//======================
procedure change(x,y,k:longint; fp,q:char);
var
  i,fx,fy:longint;
begin
  for i:=1 to p[fp] do
  begin
    fx:=x+f[fp,k,i,1]; fy:=y+f[fp,k,i,2];
    map[fx,fy]:=q;
  end;
end;
//======================
procedure find(x,y:longint);
var
  fx,fy,i:longint;
  fp:char;
begin
  if x=11 then
  begin
    print;
    close(input); close(output);
    halt;
  end;
  fx:=x; fy:=y+1;
  if fy>fx then
  begin
    inc(fx); fy:=1;
  end;
  if map[x,y]<>'.' then find(fx,fy) else
  for fp:='A' to 'L' do
  if not get[fp] then
  begin
    get[fp]:=true; map[x,y]:=fp;
    for i:=1 to s[fp] do
    if check(x,y,i,fp) then
    begin
      change(x,y,i,fp,fp);
      find(fx,fy);
      change(x,y,i,fp,'.');
    end;
    map[x,y]:='.'; get[fp]:=false;
  end;
end;
//======================
procedure check;
var
  i,j,k,x,y,fx,fy:longint;
  fp:char;
begin
  for fp:='A' to 'L' do
  begin
    writeln(fp);
    for i:=1 to s[fp] do
    begin
      for j:=1 to 10 do
      for k:=1 to 10 do text[j,k]:='.';
      x:=5; y:=5; text[x,y]:='S';
      for j:=1 to p[fp] do
      begin
        fx:=x+f[fp,i,j,1]; fy:=y+f[fp,i,j,2];
        text[fx,fy]:='*';
      end;
      for j:=1 to 10 do
      begin
        for k:=1 to 10 do write(text[j,k]);
        writeln;
      end;
      writeln;
    end;
  end;
end;
//======================
procedure work(x,y,s:longint);
var
  next:boolean;
begin
  have[x,y]:=true;
  next:=false;
  if (map[x+1,y]='.')and not have[x+1,y] then
  begin work(x+1,y,s+1); next:=true; end;
  if (map[x-1,y]='.')and not have[x-1,y] then
  begin work(x-1,y,s+1); next:=true; end;
  if (map[x,y+1]='.')and not have[x,y+1] then
  begin work(x,y+1,s+1); next:=true; end;
  if (map[x,y-1]='.')and not have[x,y-1] then
  begin work(x,y-1,s+1); next:=true; end;
  if not next and (s<3) then
  begin
    writeln('No solution');
    close(input); close(output);
    halt;
  end;
end;
//======================
begin
  assign(input,'zhzyx.in'); reset(input);
  assign(output,'zhzyx.out'); rewrite(output);
  for i:=1 to 10 do
  begin
    for j:=1 to i do
    begin
      read(map[i,j]);
      if map[i,j] in ['A'..'Z'] then get[map[i,j]]:=true;
    end;
    readln;
  end;
  init;
  //check;
  for i:=1 to 10 do
  begin
    for j:=1 to i do
    if not have[i,j] and (map[i,j]='.') then work(i,j,1);
  end;
  find(1,1);
  writeln('No solution');
  close(input); close(output);
end.
